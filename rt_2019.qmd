# Sởi năm 2019

## Phân tích hệ số lây nhiễm R~t~

```{r}
#| warning: false
#| message: false
#| echo: false

library(readxl)
library(EpiEstim)
library(ggplot2)
library(dplyr)
library(janitor)
library(tidyr)
library(knitr)
library(lubridate)
library(slider)
library(zoo)
library(data.table)

df <- read_xlsx("C:/Users/Admin/Desktop/modelling/data/linelist_measles_hcmc.xlsx", sheet = "DS 2013-2023")
df <- as.data.frame(df)
```

```{r}
#| echo: false

df <- df %>% clean_names()
df <- df %>% rename(dates = x0_ngaynv,
                    tuoi = x0_tuoi,
                    ngaysinh = x0_ngaysinh,
                    gioi = x0_phai,
                    qh = t_qh)
df1 <- df[,c("dates", "stt", "tuoi", "gioi", "qh")]
df <- df[,c("dates", "stt")]
df_convert <- df %>% group_by(dates) %>% 
  summarise(I = n())

df_complete <- df_convert %>%
    complete(dates = seq(min(dates), max(dates), by = "day")) %>%
    replace_na(list(I = 0))

df_complete$dates <- as.Date(df_complete$dates)
```

```{r}
process_data <- function(mod_data) {
  df_rt <- mod_data$R %>%
    mutate(
      dates = mod_data$dates[t_end],
      q1_rt = `Quantile.0.025(R)`,
      q3_rt = `Quantile.0.975(R)`,
      rt = `Mean(R)`,
      b_posterior = `Std(R)`^2 / `Mean(R)`,
      a_posterior = `Mean(R)` / b_posterior,
      pct = pgamma(1, shape = a_posterior, scale = b_posterior, lower.tail = FALSE),
      pl = case_when(
        pct > 0.9 ~ "tim",
        pct > 0.75 & pct <= 0.9 ~ "do",
        pct > 0.25 & pct <= 0.75 ~ "cam",
        pct > 0.1 & pct <= 0.25 ~ "vang",
        pct < 0.1 ~ "xanh"
      )
    )
  
  return(df_rt)
}
```

```{r}
plot_rt <- function(data){

  df_plot <- data
  df_plot <- head(do.call(rbind, by(df_plot, df_plot$id, rbind, NA)), -1)
  df_plot[,c("pl", "id")] <- lapply(df_plot[,c("pl","id")], na.locf)
  df_plot[] <- lapply(df_plot, na.locf, fromLast = T)
  
  col <- c("#f26522", "#ed1d24", "#7f3f98", "#ffde17", "#00a14b")
  ggplot(df_plot, aes(x = dates)) +
    # geom_line(aes(y = rt, color = pl)) +
    geom_ribbon(aes(ymin = q1_rt, ymax = q3_rt, fill = pl, group = id), 
                alpha = 0.3) +
    geom_line(data = data, mapping = aes(x = dates, y = rt, color = pl, 
                                         group = 1),
              linewidth = 1) + 
    geom_hline(yintercept = 1, linetype = "dashed", color = "black") +
    labs(x = "Date", y = "Estimate Rt", fill = NULL, color = NULL) + 
    theme_classic() +
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 10),
          axis.text.y = element_text(size = 10),
          axis.title.x = element_text(size = 12),
          axis.title.y = element_text(size = 12),
          legend.position = "none") +
    scale_x_date(date_labels = "%b %Y", date_breaks = "4 week", limits = c(ymd("2018-08-27", ymd("2020-04-13")))) +
    scale_y_continuous(expand = c(0,0)) +
    scale_fill_manual(values = col) +
    scale_color_manual(values = col) + 
    annotate(
    "segment", x = as.Date("2018-10-17"), xend = as.Date("2018-10-17"),
    y = 25, yend = 0, color = "black", size = 1) +
  geom_rect(aes(xmin = as.Date("2018-10-17"), xmax = as.Date("2019-01-01") + 15, ymin = 17, ymax = 26), fill = "#42CAFD") +
  annotate("text", x = as.Date("2018-10-17") + 1, y = 23, label = "Vaccination",
           color = "black",
           hjust = 0, size = 12 / .pt)
}
```

```{r}
#| echo: false
#| warning: false
#| message: false

df_complete <- df_complete %>%
  mutate(mva_14d = slide_dbl(
    I, .f = ~mean(.x, na.rm = T),
    .before = 13
  )
)

df_2018 <- filter(df_complete, dates >= "2018-01-01" & dates <= "2018-12-31")

ggplot(df_2018, aes(x = dates)) +
    geom_histogram(aes(y = I, fill = "Cases"), stat = "identity", binwidth = 1, width = 1) +
    geom_line(aes(y = mva_14d, color = "Moving Average"), size = 1) +
    labs(x = NULL, y = "Incidence", fill = NULL, color = NULL) +
    theme_classic() +
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 10),
          axis.text.y = element_text(size = 10),
          axis.title.x = element_text(size = 12),
          axis.title.y = element_text(size = 12),
          legend.position = "bottom") + 
    scale_x_date(date_labels = "%b %Y", date_breaks = "2 week") +
    scale_fill_manual(values = "#87A2FF") +
    scale_color_manual(values = "#E78F81")
   


```

-   Theo dữ liệu thì dịch Sởi năm 2019, số ca bắt đầu tăng liên tục từ **tháng 09/2018**, do đó **R~t~** sẽ được ước tính từ **tháng 09/2018** đến **tháng 03/2020**.

```{r}
#| echo: false
#| message: false
#| warning: false

df_filter <- filter(df_complete, dates >= "2018-09-01" & dates <= "2020-03-31")
p_hist <- ggplot(df_filter, aes(x = dates)) +
    geom_histogram(aes(y = I, fill = "Cases"), stat = "identity", binwidth = 1, width = 1) +
    geom_line(aes(y = mva_14d, color = "Moving Average"), size = 1) +
    labs(x = NULL, y = "Incidence", fill = NULL, color = NULL) +
    theme_classic() +
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 10),
          axis.text.y = element_text(size = 10),
          axis.title.x = element_text(size = 12),
          axis.title.y = element_text(size = 12),
          legend.position = "bottom") + 
    scale_x_date(date_labels = "%b %Y", date_breaks = "4 week") +
    scale_fill_manual(values = "#87A2FF") +
    scale_color_manual(values = "#E78F81")
```

-   Số ca bắt đầu tăng liên tục từ tháng 09/2018, kéo dài đến những tháng đầu năm 2020. Vào tháng 02/2019 thì số ca được ghi nhận cao nhất (khoảng 80 ca), và sau đó số ca bắt đầu giảm đến tháng 07/2019 thì số ca có xu hướng đi ngang kéo dài đến đầu năm 2020.

-   Về nhóm tuổi, đầu dịch thì nhóm tuổi \< 18 tháng chiếm khá cao, tuy nhiên sau 3 tháng (đến tháng 12/2018) thì nhóm từ 5 - 10 tuổi và trên 10 tuổi xuất hiện nhiều hơn, đặc biệt là vào thời gian số ca bệnh ghi nhận cao nhất (khoảng tháng 01 - 02/2019).

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-height: 10

library(patchwork)

t_start <- seq(2, nrow(df_filter)-13)
t_end <- t_start + 13

mod <- estimate_R(
  incid = df_filter, 
  method = "parametric_si", 
  config = make_config(
    list(
      mean_si = 14.5, 
      std_si = 3.25,
      t_start = t_start,
      t_end = t_end
    )
  )
)

df_rt <- process_data(mod)

df_rt <- df_rt %>% 
     arrange(dates) %>% 
     mutate(id = consecutive_id(pl))

# Biểu đồ đường cong dịch
p_hist <- ggplot(df_filter, aes(x = dates)) +
    geom_histogram(aes(y = I, fill = "Cases"), stat = "identity", binwidth = 1, width = 1) +
    geom_line(aes(y = mva_14d, color = "Moving Average"), size = 1) +
    labs(x = NULL, y = "Incidence", fill = NULL, color = NULL) +
    theme_classic() +
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 10),
          axis.text.y = element_text(size = 10),
          axis.title.x = element_text(size = 12),
          axis.title.y = element_text(size = 12),
          legend.position = "bottom") + 
    scale_fill_manual(values = "#87A2FF") +
    scale_color_manual(values = "#E78F81") +
    scale_x_date(date_labels = "%b %Y", date_breaks = "4 week",
                 limits = c(ymd("2018-08-27", ymd("2020-04-13"))))

# Biểu đồ Rt
p_rt <- plot_rt(df_rt)

p_hist / p_rt
```

```{r}
plot_rt <- function(data){

  df_plot <- data
  df_plot <- head(do.call(rbind, by(df_plot, df_plot$id, rbind, NA)), -1)
  df_plot[,c("pl", "id")] <- lapply(df_plot[,c("pl","id")], na.locf)
  df_plot[] <- lapply(df_plot, na.locf, fromLast = T)
  
  col <- c("#f26522", "#ed1d24", "#7f3f98", "#ffde17", "#00a14b")
  ggplot(df_plot, aes(x = dates)) +
    # geom_line(aes(y = rt, color = pl)) +
    geom_ribbon(aes(ymin = q1_rt, ymax = q3_rt, fill = pl, group = id), 
                alpha = 0.3) +
    geom_line(data = data, mapping = aes(x = dates, y = rt, color = pl, 
                                         group = 1),
              linewidth = 1) + 
    geom_hline(yintercept = 1, linetype = "dashed", color = "black") +
    labs(x = "Date", y = "Estimate Rt", fill = NULL, color = NULL) + 
    theme_classic() +
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 12),
          axis.text.y = element_text(size = 12),
          axis.title.x = element_text(size = 14),
          axis.title.y = element_text(size = 14),
          legend.position = "none") +
    scale_x_date(date_labels = "%b %Y", date_breaks = "4 week",
                 limits = c(ymd("2018-10-01", ymd("2020-04-13")))) +
    scale_y_continuous(expand = c(0,0)) +
    scale_fill_manual(values = col) +
    scale_color_manual(values = col) + 
    annotate(
    "segment", x = as.Date("2018-10-17"), xend = as.Date("2018-10-17"),
    y = 3.5, yend = 0, color = "black", size = 1) +
  geom_rect(aes(xmin = as.Date("2018-10-17"), xmax = as.Date("2019-01-01") + 15, ymin = 2.5, ymax = 3.5), fill = "#42CAFD") +
  annotate("text", x = as.Date("2018-10-17") + 1, y = 3, label = "Vaccination",
           color = "black",
           hjust = 0, size = 12 / .pt)
}
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-height: 10
library(patchwork)

df_filter_plot <- filter(df_filter, dates >= "2018-10-01")
p_hist <- ggplot(df_filter_plot, aes(x = dates)) +
    geom_histogram(aes(y = I, fill = "Cases"), stat = "identity", binwidth = 1, width = 1) +
    geom_line(aes(y = mva_14d, color = "Moving Average"), size = 1) +
    labs(x = NULL, y = "Incidence", fill = NULL, color = NULL) +
    theme_classic() +
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 10),
          axis.text.y = element_text(size = 10),
          axis.title.x = element_text(size = 12),
          axis.title.y = element_text(size = 12),
          legend.position = "bottom") + 
    scale_fill_manual(values = "#87A2FF") +
    scale_color_manual(values = "#E78F81") + 
    scale_x_date(date_labels = "%b %Y", date_breaks = "4 week",
                 limits = c(ymd("2018-10-01", ymd("2020-04-13"))))

df_rt_plot <- filter(df_rt, dates >= "2018-10-01")

p_rt <- plot_rt(df_rt_plot)

p_hist/p_rt

```

::: {.callout-caution collapse="true"}
## Bảng kết quả của Rt

```{r}
#| echo: false
#| message: false
#| warning: false
df_rt <- df_rt %>%
  arrange(desc(dates))

kable(df_rt[,c("dates", "rt", "q1_rt", "q3_rt", "pct")], col.names = c("Dates", "Estimatr Rt", "Q1", "Q3", "Propability"))
```
:::

Lúc số ca bắt đầu liên tục thì **R~t~** rất cao và đến tháng 11/2018 thì **R~t~** mới giảm gần bằng 1. Tuy nhiên, đến cuối tháng 01/2019 (thời gian ghi nhận số ca cao nhất) thì **R~t~** mới bằng 1 và tiếp tục giảm sau đó.

Sử dụng bảng phân độ **R~t~**, giai đoạn **R~t~** của Sởi năm 2018-2019 diễn ra như sau [@cdc2024a]:

-   Từ 09/2018 đến tháng 01/2019: số ca nhiễm **đang tăng**.

-   Từ 02/2019 đến tháng 08/2019: số ca nhiễm **đang giảm**, có những khoảng thời gian chuyển sang giai đoạn **có thể giảm** hoặc **ổn định**.

-   Từ 09/2019 đến 01/2020: số ca nhiễm **có thể tăng** và đến 10/2019 thì số ca nhiễm **đang tăng,** sau đó **ổn định** dần.

-   Từ tháng 01/2020 - 03/2020: số ca nhiễm **đang giảm.**

## Phân bố nhóm tuổi theo tuần

```{r}
#| echo: false
#| message: false
#| warning: false

df_filter <- filter(df_complete, dates >= "2018-09-01" & dates <= "2020-03-31")
df_filter$week_onset <- floor_date(df_filter$dates,
                                     "week", week_start = 1) 
df_filter$week_center <- df_filter$week_onset + days(3)

p_hist <- ggplot(df_filter, aes(x = week_center)) +
    geom_histogram(aes(y = I), fill = "#87A2FF", stat = "identity", binwidth = 1, width = 5) +
    labs(x = NULL, y = "Incidence", fill = NULL, color = NULL) +
    theme_classic() +
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 10),
          axis.text.y = element_text(size = 10),
          axis.title.x = element_text(size = 12),
          axis.title.y = element_text(size = 12)) + 
    scale_x_date(date_labels = "%d %b %Y", date_breaks = "4 week")
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-height: 10
library(patchwork)
library(ggsci)

df1 <- read_xlsx("C:/Users/Admin/Desktop/modelling/data/linelist_measles_hcmc.xlsx", sheet = "Sheet1")
df1 <- as.data.frame(df1)

df1 <- df1 %>% rename(dates = nv,
                    ngaysinh = ns)

df_2019 <- filter(df1, dates >= "2018-09-01" & dates <= "2020-03-31")


df_2019$age <- time_length(interval(df_2019$ngaysinh, df_2019$dates), "month")

df_2019 <- df_2019 %>% mutate(agegr= case_when(
    age < 9 ~ "< 9 months",
    9 <= age & age < 18 ~ "9 - <18 months",
    18 <= age & age <= 60 ~ "18 months - 5 years",
    60 < age & age <= 120 ~ "> 5 years - 10 years",
    age > 120  ~ "> 10 years"
  ))

df_2019$agegr <- factor(df_2019$agegr, levels = c("> 10 years", "> 5 years - 10 years", "18 months - 5 years" ,"9 - <18 months" ,"< 9 months"))

df_2019$dates <- as.Date(df_2019$dates)
df_2019$ngaysinh <- as.Date(df_2019$ngaysinh)

df_2019$week_onset <- floor_date(df_2019$dates, "week", week_start = 1)

df_2019 <- df_2019 |> 
  filter(!is.na(week_onset), !is.na(agegr)) |> 
  count(week_onset, agegr) |> 
  group_by(week_onset) |> 
  mutate(prop = n / sum(n)) |> 
  data.frame()

df_2019 <- df_2019 %>% mutate(week_center = week_onset + days(3))

p_agegr <- ggplot(df_2019, aes(x = week_center, y = prop, fill = agegr)) +
  geom_bar(stat = "identity") +
  labs(x = "Date", y = "Probability",
       title = "Age group by date of admission", fill = NULL) +
  scale_fill_jco() +
  theme_classic() + 
  scale_x_date(date_labels = "%d %b %Y", date_breaks = "4 week") +
  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 10),
        axis.text.y = element_text(size = 10),
        axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12),
        legend.position = "bottom")      
p_hist / p_agegr
```
